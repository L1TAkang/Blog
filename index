<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>내 개인 블로그</title>
    <!-- Pretendard 폰트 불러오기 -->
    <link rel="stylesheet" as="style" crossorigin href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard.min.css" />
    <!-- marked.js 라이브러리: 마크다운을 HTML로 변환하기 위해 필요합니다. (현재 캔버스에서는 직접 사용되지 않지만, GitHub Pages 배포 시 유용합니다.) -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <style>
        /* 기본 스타일 초기화 및 Pretendard 폰트 적용 */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Pretendard', sans-serif;
            color: #333; /* 기본 텍스트 색상 */
        }

        body {
            background-color: #ffffff; /* 전체 배경 흰색 */
            line-height: 1.6;
        }

        .container {
            display: flex;
            flex-direction: column; /* 기본은 세로 배열 (모바일) */
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
            gap: 20px; /* 섹션 간 간격 */
        }

        .section {
            background-color: #ffffff; /* 각 섹션 배경 흰색 */
            padding: 20px;
            border-radius: 8px; /* 모서리 둥글게 */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 은은한 그림자 */
        }

        /* 왼쪽 섹션 - 게시물 목록 */
        .left-section {
            flex: 1; /* 가변 너비 */
            min-width: 280px; /* 최소 너비 */
        }

        .left-section h2 {
            margin-bottom: 15px;
            font-size: 1.5em;
            color: #333;
        }

        .post-list ul {
            list-style: none;
        }

        .post-list li {
            margin-bottom: 10px;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }

        .post-list li:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .post-list a {
            text-decoration: none;
            color: #555;
            font-weight: 500;
            display: block;
            transition: color 0.3s ease;
        }

        .post-list a:hover {
            color: #007bff; /* 호버 시 색상 변경 (선택 사항) */
        }

        .post-date {
            font-size: 0.8em;
            color: #888;
            margin-top: 5px;
        }

        /* 가운데 섹션 - 본문 */
        .center-section {
            flex: 2; /* 왼쪽 섹션보다 2배 넓게 */
            min-width: 320px; /* 최소 너비 */
        }

        .center-section h1 {
            margin-bottom: 20px;
            font-size: 2em;
            color: #333;
        }

        .post-content p {
            margin-bottom: 1em;
            line-height: 1.8;
            color: #444;
        }

        .post-content img {
            max-width: 100%;
            height: auto;
            display: block;
            margin: 20px 0;
            border-radius: 5px;
        }

        /* 오른쪽 섹션 - 프로필 */
        .right-section {
            flex: 1;
            min-width: 240px;
            text-align: center;
        }

        .right-section h2 {
            margin-bottom: 15px;
            font-size: 1.5em;
            color: #333;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%; /* 원형 이미지 */
            object-fit: cover;
            margin-bottom: 15px;
            border: 2px solid #eee; /* 이미지 테두리 */
        }

        .profile-description {
            font-size: 0.95em;
            color: #666;
            margin-bottom: 15px;
        }

        .social-links a {
            display: inline-block;
            margin: 0 10px;
            color: #007bff;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }

        .social-links a:hover {
            color: #0056b3;
        }

        /* 반응형 디자인 */
        @media (min-width: 768px) {
            .container {
                flex-direction: row; /* 태블릿 이상에서는 가로 배열 */
                align-items: flex-start; /* 상단 정렬 */
            }

            .left-section {
                flex: 1.2; /* 왼쪽 섹션을 조금 더 넓게 */
            }

            .center-section {
                flex: 3; /* 가운데 섹션을 가장 넓게 */
            }

            .right-section {
                flex: 1; /* 오른쪽 섹션은 기본 비율 */
            }
        }

        @media (min-width: 1024px) {
            .container {
                gap: 30px; /* 데스크톱에서는 섹션 간 간격 더 넓게 */
            }
        }

        @media (max-width: 767px) {
            /* 모바일에서는 섹션 순서 변경 */
            .container {
                flex-direction: column;
            }
            .center-section {
                order: 1; /* 가운데 섹션이 가장 먼저 오도록 */
            }
            .left-section {
                order: 2; /* 왼쪽 섹션이 그 다음 */
            }
            .right-section {
                order: 3; /* 오른쪽 섹션이 마지막 */
            }
        }

    </style>
</head>
<body>
    <div class="container">
        <!-- 왼쪽 섹션: 게시물 목록 -->
        <aside class="section left-section">
            <h2>게시물 목록</h2>
            <div id="post-list" class="post-list">
                <!-- JavaScript가 여기에 게시물 목록을 삽입할 겁니다 -->
                <p>게시물을 불러오는 중...</p>
            </div>
        </aside>

        <!-- 가운데 섹션: 본문 -->
        <main class="section center-section">
            <article id="post-content">
                <!-- JavaScript가 여기에 게시물 내용을 삽입할 겁니다 -->
                <h1>블로그에 오신 것을 환영합니다!</h1>
                <div class="post-content">
                    <p>왼쪽에서 게시물을 선택하거나, 첫 게시물이 여기에 자동으로 표시됩니다.</p>
                </div>
            </article>
        </main>

        <!-- 오른쪽 섹션: 프로필 -->
        <aside class="section right-section">
            <h2>프로필</h2>
            <img src="https://via.placeholder.com/120?text=Your+Photo" alt="프로필 사진" class="profile-image">
            <h3>개발자 김코딩</h3>
            <p class="profile-description">
                안녕하세요! 코딩과 개발을 좋아하는 개발자 김코딩입니다.
                이 블로그는 저의 학습 여정과 다양한 프로젝트를 공유하기 위해 만들어졌습니다.
                함께 성장하며 즐거운 코딩 라이프를 만들어가고 싶어요!
            </p>
            <div class="social-links">
                <a href="https://github.com/your-github-id" target="_blank">GitHub</a>
                <a href="https://linkedin.com/in/your-linkedin-id" target="_blank">LinkedIn</a>
                <a href="mailto:your-email@example.com">Email</a>
            </div>
        </aside>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const postListElement = document.getElementById('post-list');
            const postContentElement = document.getElementById('post-content');

            // 게시물 정보 배열 (파일명, 제목, 날짜, 그리고 캔버스 미리보기를 위한 HTML 내용)
            // GitHub Pages에 배포할 때는 'posts/' 폴더 안에 실제 .md 파일을 이 파일명으로 저장해야 합니다.
            // 캔버스 미리보기에서는 content 속성의 HTML 내용을 사용합니다.
            const posts = [
                { filename: '2023-07-26-first-post.md', title: '첫 번째 게시물 제목입니다', date: '2023년 7월 26일', content: `
                    <p>이곳은 게시물의 본문 내용이 들어가는 공간입니다. 여러분이 작성하고 싶은 글을 자유롭게 넣어주세요. 블로그는 개인의 생각과 경험을 공유하는 멋진 공간이죠. 마치 'lakeofyeoli' 블로그처럼 다양한 이야기를 담을 수 있습니다.</p>
                    <p>글을 더 풍성하게 만들기 위해 이미지나 동영상, 코드 블록 등을 추가할 수 있어요. 예를 들어 아래와 같이 이미지를 넣을 수도 있습니다.</p>
                    <img src="https://via.placeholder.com/600x300?text=Your+Image+Here" alt="샘플 이미지">
                    <p>반응형 디자인 덕분에 모바일, 태블릿, 데스크톱 등 어떤 기기에서 접속하든 깔끔하게 보일 거예요. 레이아웃이 자동으로 조절되어 사용자 경험을 향상시킵니다.</p>
                    <p>글을 마치기 전에, 이 블로그를 만들면서 느꼈던 점이나 앞으로의 계획을 추가해볼 수 있습니다. 코드를 직접 수정하면서 자신만의 개성을 담아보세요!</p>
                `},
                { filename: '2023-07-25-second-post.md', title: '두 번째 게시물은 이렇게 써볼까요', date: '2023년 7월 25일', content: `
                    <p>이것은 두 번째 게시물의 내용입니다. 첫 번째 게시물과 마찬가지로 여러분의 이야기를 담을 수 있어요. 새로운 아이디어나 프로젝트에 대한 진행 상황을 공유하는 데 좋습니다.</p>
                    <p>코딩 팁, 일상 이야기, 여행 경험 등 어떤 주제든 자유롭게 작성해보세요. 독자들이 흥미를 가질 만한 내용으로 채워나가세요!</p>
                `},
                { filename: '2023-07-24-third-post.md', title: '세 번째 게시물 테스트', date: '2023년 7월 24일', content: `
                    <p>세 번째 게시물 내용입니다. 블로그에 다양한 콘텐츠를 채워나가는 연습을 해보세요. 많을수록 좋습니다!</p>
                `},
                { filename: '2023-07-23-fourth-post.md', title: '새로운 아이디어를 공유합니다', date: '2023년 7월 23일', content: `
                    <p>네 번째 게시물입니다. 흥미로운 아이디어가 있다면 이곳에 상세히 설명해 주세요.</p>
                `}
            ];

            // 게시물 목록을 렌더링하는 함수
            function renderPostList() {
                if (posts.length === 0) {
                    postListElement.innerHTML = '<p>게시물이 없습니다.</p>';
                    return;
                }

                const ul = document.createElement('ul');
                posts.forEach(post => {
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.href = `#${post.filename.replace('.md', '')}`; // URL 해시 사용
                    a.textContent = post.title;
                    a.dataset.filename = post.filename; // 파일명을 data-속성에 저장
                    a.addEventListener('click', (e) => {
                        e.preventDefault(); // 기본 링크 동작 방지
                        loadPost(post.filename); // 게시물 로드
                    });

                    const dateDiv = document.createElement('div');
                    dateDiv.classList.add('post-date');
                    dateDiv.textContent = post.date;

                    li.appendChild(a);
                    li.appendChild(dateDiv);
                    ul.appendChild(li);
                });
                postListElement.innerHTML = ''; // 기존 내용 지우기
                postListElement.appendChild(ul);
            }

            // 특정 게시물을 불러와서 본문에 표시하는 함수 (여기서는 posts 배열의 content 속성 사용)
            function loadPost(filename) {
                const postToLoad = posts.find(post => post.filename === filename);
                if (postToLoad) {
                    // postToLoad.title과 postToLoad.date를 직접 사용
                    postContentElement.innerHTML = `
                        <h1>${postToLoad.title}</h1>
                        <div class="post-meta">작성일: ${postToLoad.date}</div>
                        <div class="post-content">${postToLoad.content}</div>
                    `;
                    // 스크롤을 맨 위로 올립니다.
                    window.scrollTo({
                        top: 0,
                        behavior: 'smooth'
                    });
                } else {
                    postContentElement.innerHTML = `
                        <h1>게시물을 불러올 수 없습니다</h1>
                        <div class="post-content">
                            <p>죄송합니다. 요청하신 게시물을 찾을 수 없거나 불러오는 데 문제가 발생했습니다.</p>
                        </div>
                    `;
                }
            }

            // 페이지 로드 시 초기화
            renderPostList();

            // 초기 로드 시 첫 번째 게시물 표시 또는 URL 해시에 따른 게시물 표시
            const initialHash = window.location.hash.substring(1);
            const initialPost = posts.find(p => p.filename.replace('.md', '') === initialHash);

            if (initialPost) {
                loadPost(initialPost.filename);
            } else if (posts.length > 0) {
                loadPost(posts[0].filename);
            } else {
                postContentElement.innerHTML = `
                    <h1>환영합니다!</h1>
                    <div class="post-content">
                        <p>아직 게시물이 없습니다. 'posts' 폴더에 마크다운 파일을 추가해 보세요!</p>
                    </div>
                `;
            }

            // URL 해시 변경 감지 (뒤로 가기/앞으로 가기 버튼 지원)
            window.addEventListener('hashchange', () => {
                const hash = window.location.hash.substring(1); // '#' 제거
                const post = posts.find(p => p.filename.replace('.md', '') === hash);
                if (post) {
                    loadPost(post.filename);
                } else if (posts.length > 0) {
                    // 유효하지 않은 해시이거나 해시가 없으면 첫 게시물 로드
                    loadPost(posts[0].filename);
                }
            });
        });
    </script>
</body>
</html>
